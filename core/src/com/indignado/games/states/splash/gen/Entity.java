package com.indignado.games.states.splash.gen;

import com.ilargia.games.entitas.EntityMetaData;
import com.ilargia.games.entitas.interfaces.IComponent;
import java.util.Stack;
import com.ilargia.games.entitas.events.EventBus;
import com.indignado.games.states.splash.components.Delay;
import com.indignado.games.states.splash.components.TextureView;
import com.badlogic.gdx.graphics.g2d.TextureRegion;
import com.badlogic.gdx.math.Vector2;

/**
 * ---------------------------------------------------------------------------
 * '<auto-generated>' This code was generated by CodeGeneratorApp.
 * ---------------------------------------------------------------------------
 */
public class Entity extends com.ilargia.games.entitas.Entity {

	public Entity(int totalComponents, Stack<IComponent>[] componentPools,
			EntityMetaData entityMetaData, EventBus<Entity> bus) {
		super(totalComponents, componentPools, entityMetaData, bus);
	}

	public Delay getDelay() {
		return (Delay) getComponent(CoreComponentIds.Delay);
	}

	public boolean hasDelay() {
		return hasComponent(CoreComponentIds.Delay);
	}

	public Entity addDelay(float duration) {
		Delay component = (Delay) recoverComponent(CoreComponentIds.Delay);
		if (component == null) {
			component = new Delay(duration);
		} else {
			component.duration = duration;;
			component.time = 0;
		}
		addComponent(CoreComponentIds.Delay, component);
		return this;
	}

	public Entity replaceDelay(float duration) {
		Delay component = (Delay) recoverComponent(CoreComponentIds.Delay);
		if (component == null) {
			component = new Delay(duration);
		} else {
			component.duration = duration;;
			component.time = 0;
		}
		replaceComponent(CoreComponentIds.Delay, component);
		return this;
	}

	public Entity removeDelay() {
		removeComponent(CoreComponentIds.Delay);
		return this;
	}

	public TextureView getTextureView() {
		return (TextureView) getComponent(CoreComponentIds.TextureView);
	}

	public boolean hasTextureView() {
		return hasComponent(CoreComponentIds.TextureView);
	}

	public Entity addTextureView(String name, TextureRegion texture,
			Vector2 position, float rotation, int height, int width) {
		TextureView component = (TextureView) recoverComponent(CoreComponentIds.TextureView);
		if (component == null) {
			component = new TextureView(name, texture, position, rotation,
					height, width);
		} else {
			component.name = name;;
			component.texture = texture;;
			component.position = position;;
			component.rotation = rotation;;
			component.height = height;;
			component.width = width;
		}
		addComponent(CoreComponentIds.TextureView, component);
		return this;
	}

	public Entity replaceTextureView(String name, TextureRegion texture,
			Vector2 position, float rotation, int height, int width) {
		TextureView component = (TextureView) recoverComponent(CoreComponentIds.TextureView);
		if (component == null) {
			component = new TextureView(name, texture, position, rotation,
					height, width);
		} else {
			component.name = name;;
			component.texture = texture;;
			component.position = position;;
			component.rotation = rotation;;
			component.height = height;;
			component.width = width;
		}
		replaceComponent(CoreComponentIds.TextureView, component);
		return this;
	}

	public Entity removeTextureView() {
		removeComponent(CoreComponentIds.TextureView);
		return this;
	}
}